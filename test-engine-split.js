// –¢–µ—Å—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ–±—ä–µ–º–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è –Ω–∞ —Ü–µ–ª—É—é –∏ –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç–∏
// node test-engine-split.js

function splitEngineSize(engineSizeStr, vehicleType) {
  let engineSizeWhole = ''
  let engineSizeDecimal = ''
  
  if (engineSizeStr && vehicleType === 'car') {
    const engineFloat = parseFloat(engineSizeStr)
    if (!isNaN(engineFloat)) {
      engineSizeWhole = Math.floor(engineFloat).toString()
      const decimal = engineFloat - Math.floor(engineFloat)
      // Always set decimal part, even if it's 0 (for 2.0 ‚Üí whole="2", decimal="0")
      engineSizeDecimal = Math.round(decimal * 10).toString()
    }
  }
  
  return { engineSizeWhole, engineSizeDecimal }
}

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ–±—ä–µ–º–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è:');
console.log('');

const testCases = [
  { input: '2.0', type: 'car', expected: { whole: '2', decimal: '0' } },
  { input: '2.5', type: 'car', expected: { whole: '2', decimal: '5' } },
  { input: '3.2', type: 'car', expected: { whole: '3', decimal: '2' } },
  { input: '600', type: 'motorcycle', expected: { whole: '', decimal: '' } }, // motorcycles don't use whole/decimal
  { input: '1200', type: 'motorcycle', expected: { whole: '', decimal: '' } },
  { input: '1.7', type: 'car', expected: { whole: '1', decimal: '7' } }
];

testCases.forEach(test => {
  const result = splitEngineSize(test.input, test.type);
  const wholeMatch = result.engineSizeWhole === test.expected.whole;
  const decimalMatch = result.engineSizeDecimal === test.expected.decimal;
  const status = wholeMatch && decimalMatch ? '‚úÖ' : '‚ùå';
  
  console.log(`${status} ${test.type}: "${test.input}" ‚Üí whole: "${result.engineSizeWhole}", decimal: "${result.engineSizeDecimal}"`);
  console.log(`    Expected: whole: "${test.expected.whole}", decimal: "${test.expected.decimal}"`);
  console.log('');
});

console.log('üîç –ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä –¥–ª—è "2.0L" (–∞–≤—Ç–æ–º–æ–±–∏–ª—å):');
console.log('1. "2.0L" ‚Üí –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è ‚Üí "2.0"');
const split = splitEngineSize('2.0', 'car');
console.log(`2. "2.0" ‚Üí —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ ‚Üí engineSizeWhole: "${split.engineSizeWhole}", engineSizeDecimal: "${split.engineSizeDecimal}"`);
console.log('3. –í —Ñ–æ—Ä–º–µ: –ø–æ–ª–µ 1 = "2", –ø–æ–ª–µ 2 = "0" ‚Üí 2.0L');
console.log('');
console.log('‚úÖ –¢–µ–ø–µ—Ä—å –≤ —Ñ–æ—Ä–º–µ –¥–æ–ª–∂–Ω—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å—Å—è –æ–±–∞ –ø–æ–ª—è –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π!');